Admin Dashboard Q's
	What happens when paper pt had been downloaded, and the user now access the old lesson?
		-> how does it affect download tracking, if at all?

	What page views to track?
		lesson_details is separate function
		only for paid users (lisencee, OOPS, and stripe customer_id). This excludes students.
			[
				"my-nextlesson",
				"my-lessons",
				"dashboard",
				"interactive-view",
				"cart",
				"search",
				"lesson-details",
				"class-manager",
				"interactive-answer-submission",
				"standards-browser",
				"my-account",
				"interestid-report",
				"lesson-types",
				"pricing",
				"about-us",
				"interactive-dl-view",
				"interestid-browser",
				"jobs",
				"press",
				"faq",
				"home",
				"admin-dashboard"
			]

	What info do we record of the downloaded lessons:
		- The following User instance methods are called in views.py to track downlaods
			track_gameboard_download
				@bottle.post('/checkout')
				@route('/downloadgameboard/<gid>/<groupid>')
				@bottle.post('/checkout-free')

			track_worksheet_download
				@bottle.post('/checkout')
				@route('/track_download/<download_type>/<download_id>', method=['GET', 'POST'])
	
			track_interactive_download
				@bottle.post('/checkout')
				@route('/track_download/<download_type>/<download_id>', method=['GET', 'POST'])

			download_tracking_table.update() is also used in
				def createAccount
				@bottle.post('/checkout-free') for 'wids'


		- download_tracking document
			downloads: all types of downloads are recorded here.
				gid => master gid for gameboards
				ref_id & edition_id => ref_id and edition_version_id for interactive lessons
				wid => wid for worksheet
				
			interactive and worksheet also gets their own nested dictionary, but I don't know why. 
			Should we start tracking the lessons that is created by the download(user copy)?
			
		- Should we get rid of redundancy (remove duplicates download records)?
			We should not record the download when 'Make Another Copy' is pressed(when the same lesson is dl'ed)
			It's creating inconsistency b/c when a lesson clone is made, it's not recorded as donwload.

		- When new lessons come live
			interactive worksheet
			interactive projects


	What changes are made to all the lessons that affects Admin Dashboard and download tracking?

Admin Dashboard Note
	To show warning that the table data is outside of licence duration, the license date has to be correct.
		For example, Dublin 

	Only first 30 teachers show up for the performace reason.

	Some teachers keep using lessons downloaded 2+ years ago, and new students have been accessing 'last_opened'
	-> This causes # of participants high, but the lessons that students are using migt not show up in the dl history modal

	why no edition info for 'Mmm Mmm Bakery'
		users download paperversion of the lesson, which doesn't have editions
		interactive editions are created
		user never logged in to NL
		no interactive rec user copy is created and only paper one exists, but show up as 'interactive' true, because
			'has_interactive_version' flag is true
		one such user is pottsj1 in Maury

	No issues were found in Edge browser

Q to Erin:
	Many users seem to be using the same lessons over and over. These lessons are downloaded long time ago 2015-, and
	won't show up in downloaded lessons modal. How about changing this to 'used' lesson so that we get to see what lessons
	are being used as opposed to what lessons are downloaded? Many lessons are downloaded but doesn't mean that they are
	used.
		kmaxwell of Maury - Cox: keeps using & creating copies from lessons dowloadd in 2015.
		J. Rosin of Dublin

	timeframe warning is on staging


Q to Duy/Eng. Team
	'Make Another Copy' will create a new record in dl tracking, but creating new copy from platform doesn't

== Admin Dashboard ==
	
	User Settings:
		Anyone with dashboard access can change info of non-teacher users
		if you have site access, no option to flag/unflag district access
		Remove user type in user settings
		Add a paragraph to explain what user settings do
		Sort users by districts

	Custom Active:
		include all columns in Activity section

	Settings UI:
		Make tables align
		'Update' button to the right
		make 'Account Info' and 'Settings' don't stack

	Documentation
		Add code_review_script documentation to the js file

=Future Admin Dashboard=
	Able to see all teachers within the district (UI is concern, but open up for employess)
	Account Info for Employees
	Add email address of the teachers in the downloaded csv table


	Teacher downloads list
		loading logo
		sortable by column(transplant from admin-dashboard)
		link to the lesson on click

	Find where the NL header is. Some pages don't have the link to admin-dashboard.

	Add participants info
		interactive pt
		gameboard 


	Higher priority--
		When opening dl-history-modal for the same user, don't reset variables.

		UI:
			yes/no on 'interactive'
			show dl type like downloads table
			grade & subject singular in dl history details
			take off line on expanded table row in dl-history

		auto save settings
		More edits to Admin Dashboard:
			Close button white in modal in white

		Pending Users:
			when pending users has the admin access flag, preserve it when it becomes a active account
		More edits:
			Loading logo while switching sections:
				checkout admin-dashboard branch --> even when 'finished_loading_table_data()' is false, 
				spinner doesn't kick in.

		When the specified timeframe is outside of district license, show message (for expired districts)

		Check on Edge browser

<Start Here>
		on Download History modal, the number of participants might be wrong if gameboard is looked up by their gid.
			(it's parent's gid, not the user's unique gameboard id) => def get_student_participation_info():
		Try solving the issue of duplicates

	Lower priority--
		Admin Dashboard Emailer

		Add Sentry error to client code?
		When signing as 'Admin', straight to Admin Dashboard
		real time activity feed in the page
		enable new tab/window navigation
		When changing section, it shouldn't change table rows order

		Put site_metrics_module_cache script into worker queue instead of running it on Heroku Scheduler

		Refactor:
			MARK2: Consider consolidating this with set_initial_district_and_school_ids
			Consider description pop ups into a component or templates

		Performance improvement
			localStorage(frontend)
			cache by district (backend)
		
	With E-team
		Consolidate duplicate teachers with different email addresses
		Fix Pending user number


== standard-to-skill-migration ==
Discussion on Skill Browser button sizes and tag length. -> save this for future when we have a data. 
	- 20%, 30%, 45% 


** Skill Tagger **
Phase 1
	goal: 
		- curriculum team is able to start tagging skills
		- no impact to user facing feature
	x check skill functionality in lesson-details page
	x include 'focus_skill' field in gameboard_serach.skill_tags (set this up in models)
	
	x edit lesson-details page to accomodate new skill structure
	
	x auto-exclude unwanted grade during skill insertion to user_copy docs

	x standard description
	x have standards show up in item section

	x for now, setup standard-retrieval from skills, then disable it for now
	x teacher's guided

	x how to have standards from skills and old skills coexist in terms of teacher view?
		- author cannot edit state standards any more.
		- CCSS should be sync'ed with what author does.
		- we don't want to keep 'standards' field when standard-tagging is complete

		A: 
			- When needed in front end, CCSS standards are generated from skills
			- Old CCSS still exists in document, but won't be used

		B:
			- New tagging does not sync, meaning item will display old standards

		C: 
			- When CCSS are changed by the author, it override existing CCSS standards in 'stanards' field
			- fewer places to re-write code
	     => C.a: do this in backend script
	     		- I would have a better control of data. Not having to track down what's happened in front-end.
			C.b: do this in real-time in frontend

	x edit take_snapshot to quarantine skills in master usercopy

	x disable skill browser
	
	x finish writing scripts to insert skills (gather all active master user_copies)
	
	X adjust tag-skills browser based on Q to Erin.
	
	x check diffs and refactor code.
		- use set instead of list (js)
		- computed to pureComputed (js)
		- call observable only once per function

	x make tag-skills-modal universal for Ashley's compo

	x identify and remove unused routes related to skills
	
	- re-import, do all the manual tests
	
	x document the process and expectations

Between Phases
	- write a script to override standards with skills' standards
	- insert new standard (non-ccss) mapping

Phase 2
	goal: taggled skills will take effect.

	- propagate changes in master usercopy to its children edition usercopies
	- check functions in skills browser
	- pdg generation
	- project_details UI (display of skills)
	- test the process from item tagging all the way to gameboard_search (it's been tested. just do it again)

	- change front end logic to display standards. Now standards only carry '_id' and 'grade'. This is a new change,
	  and no work has been done to accomodate this.

Unleash when all skills are tagged
	-- pacerrabbit --
	+ ItemWithSkills
		__standard_by_category => __standard_by_category_new
		== displayed standards for the item to sync'ed with new tagging feature

	+ TeacherGuideSection
		item_with_standards.standards =>  .__computed_standards
		== standard table

	+ Skills Browser in browse-by-standard.html

	-- models -- 	
	+ models.ResourceWithItems.get_all_standard_ids
		enable commented-out code
		== for teacher-guide section

	+ models.RefAsGameboard
		gather skill info from metadata and transfer to PublishedGameboard as 'categories'
		__init__ and construct_tags (switch between old code and new code)

	+ models.InteractiveResourceUserCopy.take_snapshot
		__remove_all_skills

	+ models.RefAsGameboard.__init__
		uncomment 'skill_tags' in lesson_details_field

	+ models.Gameboard.get_standards()
		comment out if self.has_interactive_version() clause to draw updated standards

Suggestions
	- consider organizing standards' subject naming
	- in interactive resources, get standard descriptions only once
		now it does at least twice(initial load, and tag-skills modal)

	- update of usercopy edition happen in views.py. => should be in the model


When a state standard is tagged with skill,
	- automatically add state standards to existing usercopy.items.skills
	- the standard info sync in Ref.combined_tags and PublishedGameboard.categories


Issues:
	- author views items donn't show standard's description on hover if the standards hadn't been a part of the lesson already. (b/c server grabs only descriptions of existing standards)


** Other Tasks **

= Write more tests
	- UserCopy.set/unset_confidence_score_questions
	- HierarchicalTag.get_all_as_tree()
	- get_all_skills_w_standards()
	- has_purchased_lessons / has_payment_record / get_disabled_lessons


= ConfidenceScore
	ConfidenceScore, instead of username, show student's actual name
	change 'vision' to 'Real World Connection'

= npm migration
	- ignore exportsOverride in bower.json and migrate just dependencies (we don't know what they are)

	- Grunt -> standard browser, project platform page
	- migrating to gulp is a huge task for standard browser

Delete the following files when confirmed that it's unnecessary
./client/src/common/components/footer-nextlesson.html
./client/src/common/components/footer-nextlesson.js
./client/src/common/components/header-nextlesson.html
./client/src/common/components/header-nextlesson.js
